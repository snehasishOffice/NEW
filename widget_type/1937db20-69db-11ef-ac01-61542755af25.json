{
  "entityType" : "WIDGET_TYPE",
  "entity" : {
    "fqn" : "navbar",
    "name" : "Navbar",
    "deprecated" : false,
    "image" : null,
    "description" : null,
    "descriptor" : {
      "type" : "static",
      "sizeX" : 499,
      "sizeY" : 392,
      "resources" : [ {
        "url" : "https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"
      } ],
      "templateHtml" : "<!--<div class=\"container\">-->\n    <!--<ul class=\"menu\" style=\"marginLeft: 10px\">-->\n    <!--    <li class=\"menu__item\" (click)=\"navToState()\"><mat-icon class=\"icon\">arrow_back</mat-icon>Back</li>-->\n    <!--</ul>-->\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <div class=\"container\">\n    <nav class=\"navbar\">\n        <ul class=\"navbar-menu\">\n            <li class=\"nav-item\" (click)=\"openDashboard('home')\"><img src=\"/api/images/public/zHGCnetpE36tnEoPLJcnWiUEOeN7B57J\" alt=\"dexterLogo.png\" /></li>\n            <!--<li class=\"nav-item\" (click)=\"openDashboard('home')\"><i class=\"fas fa-home icon-home\"></i> Home</li>-->\n            <li class=\"nav-item\" (click)=\"openDashboard('branchList')\"><i class=\"fas fa-branch icon-branch\"></i> Branch List</li>\n            <li class=\"nav-item\" (click)=\"openDashboard('deviceConfig')\"><i class=\"fas fa-cogs icon-config\"></i> Device Connectivity</li>\n            <li class=\"nav-item\" (click)=\"openDashboard('alarmsList')\"><i class=\"fas fa-bell icon-alarm\"></i> Alarms</li>\n            <li class=\"nav-item\" (click)=\"openDashboard('errorsList')\"><i class=\"fas fa-bell icon-alarm\"></i> Errors</li>\n            <li class=\"nav-item\"><i class=\"fas fa-file-alt icon-reports\"></i> Reports</li>\n            <li class=\"nav-item\"><i class=\"fas fa-chart-line icon-analytics\"></i> Analytics</li>\n            <li class=\"nav-item\" (click)=\"logout()\"><i class=\"fas fa-sign-out-alt icon-logout\"></i> Logout</li>\n            \n            <li class=\"nav-item\" (click)=\"openDashboard('home')\"><img src=\"/api/images/public/zHGCnetpE36tnEoPLJcnWiUEOeN7B57J\" alt=\"dexterLogo.png\" /></li>\n            <!--<li class=\"nav-item\" (click)=\"openDashboard('home')\"><i class=\"fas fa-home icon-home\"></i> Home</li>-->\n            <li class=\"nav-item\" (click)=\"openDashboard('branchList')\"><i class=\"fas fa-branch icon-branch\"></i> Branch List</li>\n            <li class=\"nav-item\" (click)=\"openDashboard('deviceConfig')\"><i class=\"fas fa-cogs icon-config\"></i> Device Connectivity</li>\n            <li class=\"nav-item\" (click)=\"openDashboard('alarmsList')\"><i class=\"fas fa-bell icon-alarm\"></i> Alarms</li>\n            <li class=\"nav-item\" (click)=\"openDashboard('errorsList')\"><i class=\"fas fa-bell icon-alarm\"></i> Errors</li>\n            <li class=\"nav-item\"><i class=\"fas fa-file-alt icon-reports\"></i> Reports</li>\n            <li class=\"nav-item\"><i class=\"fas fa-chart-line icon-analytics\"></i> Analytics</li>\n            <li class=\"nav-item\" (click)=\"logout()\"><i class=\"fas fa-sign-out-alt icon-logout\"></i> Logout</li>\n           \n        </ul>\n    </nav>\n</div>",
      "templateCss" : "body {\r\n    margin: 0;\r\n    font-family: Arial, sans-serif;\r\n    /*width: 100%;*/\r\n    /*height: 100%;*/\r\n    /*position: relative;*/\r\n}\r\n\r\n.navbar {\r\n    background-color: #4db6ac;\r\n    padding: 20px 10px;\r\n    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.1);\r\n    width: 100%; /* Set the fixed width for the navbar */\r\n    height: 100%; /* Make navbar take full viewport height */\r\n    position: fixed; /* Fix the navbar to the left side */\r\n    top: 0;\r\n    left: 0;\r\n    overflow-y: auto; /* Enable vertical scrolling */\r\n}\r\n\r\n.navbar-menu {\r\n    list-style: none;\r\n    margin: 0;\r\n    padding: 0;\r\n    display: flex;\r\n    flex-direction: column; /* Stack menu items vertically */\r\n    align-items: flex-start; /* Align items to the left */\r\n    width: 100%; /* Make menu take full width */\r\n}\r\n\r\n.nav-item {\r\n    color: white;\r\n    text-decoration: none;\r\n    padding: 15px 20px;\r\n    display: flex;\r\n    width: 100%; /* Make nav items take full width */\r\n    border-radius: 5px;\r\n    transition: background-color 0.3s;\r\n}\r\n\r\n.nav-item:hover {\r\n    background-color: #198754; /* Adjust color as needed */\r\n    cursor: pointer;\r\n}\r\n\r\n.nav-item i {\r\n    margin-right: 8px;\r\n}\r\n\r\n/* Optional: Customize scrollbar appearance */\r\n.navbar::-webkit-scrollbar {\r\n    width: 8px;\r\n}\r\n\r\n.navbar::-webkit-scrollbar-thumb {\r\n    background-color: #198754;\r\n    border-radius: 10px;\r\n}\r\n\r\n.navbar::-webkit-scrollbar-track {\r\n    background-color: #4db6ac;\r\n}\r\n\r\n/* Ensure the rest of the page content doesn't overlap the navbar */\r\n.main-content {\r\n    margin-left: 250px; /* Offset the content by the width of the navbar */\r\n    padding: 20px;\r\n}\r\n\r\n/* Example icons using FontAwesome, make sure to include FontAwesome in your project */\r\n/*@import url('https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css');*/\r\n\r\n.icon-home::before {\r\n    content: \"\\f015\"; /* FontAwesome home icon */\r\n}\r\n\r\n.icon-branch::before {\r\n    content: \"\\f0c9\"; /* FontAwesome bars icon for branch */\r\n}\r\n\r\n.icon-config::before {\r\n    content: \"\\f013\"; /* FontAwesome cog icon */\r\n}\r\n\r\n.icon-alarm::before {\r\n    content: \"\\f0f3\"; /* FontAwesome bell icon */\r\n}\r\n\r\n.icon-reports::before {\r\n    content: \"\\f15c\"; /* FontAwesome file icon */\r\n}\r\n\r\n.icon-analytics::before {\r\n    content: \"\\f080\"; /* FontAwesome chart-line icon */\r\n}\r\n\r\n/* Media Queries for Responsive Design */\r\n\r\n/* Large devices (desktops, 992px and up) */\r\n@media (max-width: 1200px) {\r\n    .navbar-menu {\r\n        gap: 15px;\r\n    }\r\n\r\n    .nav-item {\r\n        padding: 8px 12px;\r\n    }\r\n}\r\n\r\n/* Medium devices (tablets, 768px and up) */\r\n@media (max-width: 992px) {\r\n    .navbar-menu {\r\n        gap: 10px;\r\n    }\r\n\r\n    .nav-item {\r\n        padding: 6px 10px;\r\n    }\r\n}\r\n\r\n/* Small devices (landscape phones, 576px and up) */\r\n@media (max-width: 768px) {\r\n    .navbar-menu {\r\n        flex-direction: column;\r\n        gap: 10px;\r\n    }\r\n\r\n    .nav-item {\r\n        width: 100%;\r\n        justify-content: center;\r\n        padding: 8px 15px;\r\n    }\r\n}\r\n\r\n/* Extra small devices (portrait phones, less than 576px) */\r\n@media (max-width: 576px) {\r\n    .navbar {\r\n        padding: 5px 10px;\r\n    }\r\n\r\n    .nav-item {\r\n        padding: 5px 10px;\r\n    }\r\n}\r\n\r\n/* Specific breakpoints for Acer and Lenovo ThinkPad devices */\r\n/* Common laptop resolution 1366x768 */\r\n@media (max-width: 1366px) and (max-height: 768px) {\r\n    .navbar-menu {\r\n        gap: 12px;\r\n    }\r\n\r\n    .nav-item {\r\n        padding: 7px 13px;\r\n    }\r\n}\r\n\r\n/* Common laptop resolution 1920x1080 */\r\n@media (max-width: 1920px) and (max-height: 1080px) {\r\n    .navbar-menu {\r\n        gap: 18px;\r\n    }\r\n\r\n    .nav-item {\r\n        padding: 9px 16px;\r\n    }\r\n}\r\n.logo {\r\n        margin-right: 0; /* Remove margin */\r\n    }\r\n",
      "controllerScript" : "self.onInit = function() {\r\n    // Function to disable the back button\r\n    function disableBackButton() {\r\n        // Push a new state to the history stack to prevent going back\r\n        window.history.pushState(null, null, window.location.href);\r\n\r\n        // Listen for popstate events and push the state again to prevent navigation\r\n        window.addEventListener('popstate', function() {\r\n            window.history.pushState(null, null, window.location.href);\r\n        });\r\n    }\r\n\r\n    // Function to clear session data and reload the page\r\n    function login() {\r\n        // Clear all session storage data\r\n        sessionStorage.clear();\r\n\r\n        // Clear all local storage data\r\n        localStorage.clear();\r\n\r\n        // Clear cookies (auth-related)\r\n        document.cookie.split(\";\").forEach(function(c) {\r\n            document.cookie = c.trim().split(\"=\")[0] + \"=;expires=Thu, 01 Jan 1970 00:00:00 UTC;path=/\";\r\n        });\r\n\r\n        // Redirect to the login page with cache-busting parameter\r\n        window.location.href = window.location.href.split('?')[0] + '?_' + new Date().getTime();\r\n    }\r\n\r\n    // Initialize state controller\r\n    let stateController = self.ctx.$scope.ctx.stateController;\r\n    if (stateController) {\r\n        self.ctx.$scope.navToState = function() {\r\n            stateController.navigatePrevState(1);\r\n        }\r\n    }\r\n    \r\n    // Function to open dashboard or perform actions\r\n    self.ctx.$scope.openDashboard = function(actionName) {\r\n        let params = self.ctx.$scope.ctx.stateController.getStateParams();\r\n        let actionEventDescriptors = self.ctx.$scope.ctx.actionsApi.getActionDescriptors('elementClick');\r\n        let actionEvent;\r\n\r\n        if (actionEventDescriptors.length) {\t\r\n            actionEventDescriptors.forEach(action => {\r\n                if (action.name == actionName) {\r\n                    actionEvent = action;\r\n                }\r\n            });\r\n                \r\n            setTimeout(() => {\r\n                self.ctx.$scope.ctx.actionsApi.handleWidgetAction(null, actionEvent, null, null);\t\r\n            }, 0);\t\r\n        }\r\n    }\r\n\r\n    // Logout function to clear session data and redirect\r\n    self.ctx.$scope.logout = function() {\r\n        // Clear all session storage data\r\n        sessionStorage.clear();\r\n\r\n        // Clear all local storage data\r\n        localStorage.clear();\r\n\r\n        // Clear cookies (auth-related)\r\n        document.cookie.split(\";\").forEach(function(c) {\r\n            document.cookie = c.trim().split(\"=\")[0] + \"=;expires=Thu, 01 Jan 1970 00:00:00 UTC;path=/\";\r\n        });\r\n\r\n        // Redirect to the login page with cache-busting parameter\r\n        window.location.replace('https://www.dexterhms.com/login?_=' + new Date().getTime());\r\n    }\r\n\r\n    // Call disableBackButton function immediately on page load\r\n    disableBackButton();\r\n\r\n    // Regularly reapply back button disabling\r\n    // setInterval(disableBackButton, 50);\r\n\r\n    // Prevent navigation using keyboard shortcuts\r\n    window.addEventListener('keydown', function(e) {\r\n        if (e.key === 'Backspace' || e.key === 'ArrowLeft' || (e.ctrlKey && e.key === 'H')) {\r\n            e.preventDefault();\r\n        }\r\n    });\r\n}\r\n\r\nself.actionSources = function() {\r\n    return {\r\n        'elementClick': {\r\n            name: 'widget-action.element-click',\r\n            multiple: true\r\n        }\r\n    };\r\n}\r\n\r\nself.onDestroy = function() {\r\n}\r\n",
      "settingsSchema" : "",
      "dataKeySettingsSchema" : "",
      "settingsDirective" : "tb-html-card-widget-settings",
      "defaultConfig" : "{\"datasources\":[{\"type\":\"static\",\"name\":\"function\",\"dataKeys\":[{\"name\":\"f(x)\",\"type\":\"function\",\"label\":\"Random\",\"color\":\"#2196f3\",\"settings\":{},\"_hash\":0.15479322438769105,\"funcBody\":\"var value = prevValue + Math.random() * 100 - 50;\\nvar multiplier = Math.pow(10, 2 || 0);\\nvar value = Math.round(value * multiplier) / multiplier;\\nif (value < -1000) {\\n\\tvalue = -1000;\\n} else if (value > 1000) {\\n\\tvalue = 1000;\\n}\\nreturn value;\"}]}],\"timewindow\":{\"realtime\":{\"timewindowMs\":60000}},\"showTitle\":false,\"backgroundColor\":\"rgb(255, 255, 255)\",\"color\":\"rgba(0, 0, 0, 0.87)\",\"padding\":\"8px\",\"settings\":{\"cardHtml\":\"<div class='card'>HTML code here</div>\",\"cardCss\":\".card {\\n    font-weight: bold;\\n    font-size: 32px;\\n    color: #999;\\n    width: 100%;\\n    height: 100%;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n}\"},\"title\":\"Navbar\",\"dropShadow\":true}"
    },
    "externalId" : null,
    "id" : {
      "entityType" : "WIDGET_TYPE",
      "id" : "1937db20-69db-11ef-ac01-61542755af25"
    },
    "tags" : null
  },
  "relations" : [ ],
  "attributes" : {
    "SERVER_SCOPE" : [ ]
  }
}